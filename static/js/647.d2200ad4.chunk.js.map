{"version":3,"file":"static/js/647.d2200ad4.chunk.js","mappings":"uQAkEA,UAtDqB,WAAO,IAADA,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,SAAqB,QAAdR,EAAAG,EAASM,aAAK,IAAAT,OAAA,EAAdA,EAAgBU,OAAQ,KACvCC,GAASC,EAAAA,EAAAA,GAAQC,EAAAA,GAAiBZ,GAAlCU,KACAG,EAAuDH,EAAvDG,MAAOC,EAAgDJ,EAAhDI,SAAUC,EAAsCL,EAAtCK,aAAcC,EAAwBN,EAAxBM,YAAaC,EAAWP,EAAXO,OAC9CC,EAAeC,KAAKC,MAAqB,GAAfL,GAChC,OACEM,EAAAA,EAAAA,MAACC,EAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMrB,EAASE,EAAQoB,QAAQ,EAACH,SAAC,oBAClDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEG,IAAKX,GAAW,kCAAAY,OAAsCZ,GACtDa,IAAKhB,KAEPQ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKV,KACLQ,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,eAAaL,EAAa,WAE/BG,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIT,QAENO,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACG,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQa,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAI,OACtBT,EAAAA,EAAAA,KAAA,KAAAD,SAAaU,GAALD,EAAc,cAK9BX,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,UAAUZ,SAAC,YAEvBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,UAAUZ,SAAC,qBAI3BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,UAAUb,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAAgBA,UACtCC,EAAAA,EAAAA,KAACc,EAAAA,GAAM,UAKjB,EAIO,IAAMhB,EAAiBiB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2B","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import React, { Suspense, useRef } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { useHttp } from 'hooks/useHttp';\nimport { getMovieDetails } from 'services/moviesAPI';\nimport { styled } from 'styled-components';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const backRef = useRef(location.state?.from || '/');\n  const { data } = useHttp(getMovieDetails, movieId);\n  const { title, overview, vote_average, poster_path, genres } = data;\n  const roundedScore = Math.round(vote_average * 10);\n  return (\n    <DetailsWrapper>\n      <button onClick={() => navigate(backRef.current)}>&#8592; Go back</button>\n      <div>\n        <img\n          src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <ul>\n          <li>\n            <h2>{title}</h2>\n            <p>User score: {roundedScore}%</p>\n          </li>\n          <li>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <h4>Genres</h4>\n            {genres?.map(({ id, name }) => (\n              <p key={id}>{name}</p>\n            ))}\n          </li>\n        </ul>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={'credits'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Suspense fallback={<h2>Loading...</h2>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </DetailsWrapper>\n  );\n};\n\nexport default MovieDetails;\n\nexport const DetailsWrapper = styled.div`\n  display: grid;\n`;\n"],"names":["_location$state","movieId","useParams","location","useLocation","navigate","useNavigate","backRef","useRef","state","from","data","useHttp","getMovieDetails","title","overview","vote_average","poster_path","genres","roundedScore","Math","round","_jsxs","DetailsWrapper","children","_jsx","onClick","current","src","concat","alt","map","_ref","id","name","Link","to","Suspense","fallback","Outlet","styled","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}