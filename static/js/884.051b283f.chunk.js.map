{"version":3,"file":"static/js/884.051b283f.chunk.js","mappings":"gNAoEA,UA9DgB,WAAO,IAADA,EACZC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,GAAQC,EAAAA,GAAiBJ,GAAzCK,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MACdC,GAA8BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAwBL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAGdG,EAAQC,KAAKC,KAAKd,EAAKe,OAFZ,GAcjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACHhB,IAASiB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6CACbC,EAAAA,EAAAA,KAAA,MAAAD,SACgB,QADhBvB,EAZY,SAAAM,GACd,OAAOmB,EAAAA,EAAAA,GAAInB,GAAMoB,MAAM,EAPR,EAOsBd,EACvC,CAWOe,CAAQrB,UAAK,IAAAN,OAAA,EAAbA,EAAe4B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAAY,OACtDX,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEU,IACED,EAAY,mCAAAE,OAC2BF,GACnC,GAENG,IAAKL,EACLM,QAAS,SAAAC,GAEPA,EAAEC,cAAcL,IAjBV,6CAkBR,KAEFV,EAAAA,EAAAA,KAAA,KAAAD,SAAIQ,KACJP,EAAAA,EAAAA,KAAA,KAAAD,SAAIS,MAdGF,EAeJ,MAGRd,IAASE,IAASM,EAAAA,EAAAA,KAAA,UAAQgB,QA7B/B,WACE3B,GAAW,SAAA4B,GAAI,OAAIA,EAVJ,CAUmB,IAClCxB,GAAQ,SAAAwB,GAAI,OAAIA,EAAO,CAAC,GAC1B,EA0BmDlB,SAAC,gBAiBtD,C","sources":["components/Credits.jsx"],"sourcesContent":["import { useHttp } from 'hooks/useHttp';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/moviesAPI';\n\nconst Credits = () => {\n  const { movieId } = useParams();\n  const { data, error } = useHttp(getMovieCredits, movieId);\n  const [ItemNum, setItemNum] = useState(0);\n  const [page, setPage] = useState(1);\n  const per_page = 5;\n\n  const pages = Math.ceil(data.length / per_page);\n  /* const pagesData = Array(pages)\n    .fill('-')\n    .map((_, i) => i + 1); */\n  const getData = data => {\n    return [...data].slice(0, per_page + ItemNum);\n  };\n  function onLoadMore() {\n    setItemNum(prev => prev + per_page);\n    setPage(prev => prev + 1);\n  }\n  const imgNotFound = 'https://demofree.sirv.com/nope-not-here.jpg';\n  return (\n    <div>\n      <h2>Movie Cast</h2>\n      {error && <p>There is no info on cast for this movie</p>}\n      <ul>\n        {getData(data)?.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : ''\n              }\n              alt={name}\n              onError={e => {\n                //*  Not to forget\n                e.currentTarget.src = imgNotFound;\n              }}\n            />\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n      {page !== pages && <button onClick={onLoadMore}>Load More</button>}\n      {/* <ul>\n        {pagesData.map(page => (\n          <li>\n            {' '}\n            <button\n              onClick={() => {\n                setItemNum(prev => prev + per_page);\n              }}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n};\n\nexport default Credits;\n"],"names":["_getData","movieId","useParams","_useHttp","useHttp","getMovieCredits","data","error","_useState","useState","_useState2","_slicedToArray","ItemNum","setItemNum","_useState3","_useState4","page","setPage","pages","Math","ceil","length","_jsxs","children","_jsx","_toConsumableArray","slice","getData","map","_ref","id","name","character","profile_path","src","concat","alt","onError","e","currentTarget","onClick","prev"],"sourceRoot":""}